package com.luv2code.jdbc;

import java.sql.Connection;
import java.sql.DriverManager;

public class Testjdbc {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		String jdbcUrl = "jdbc:mysql://localhost:3306/hb-05-many-to-many?useSSL=false&serverTimezone=UTC";
		String user = "hbstudent";
		String pass = "hbstudent";
		
		try {
			System.out.println("Connecting to database: " + jdbcUrl);
			
			Connection myConn =
					DriverManager.getConnection(jdbcUrl, user, pass);
			
			System.out.println("Connection successful!!!");
			
		}
		catch (Exception exc) {
			exc.printStackTrace();
		}

	}

}


package com.luv2code.hibernate.demo;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;


@Entity
@Table(name="student")
public class Student {
	
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="id")
private int id;
	
@Column(name="first_name")
private String firstName;

@Column(name="last_name")
private String lastName;

@Column(name="email")
private String email;


@ManyToMany(fetch=FetchType.LAZY,
		cascade= {CascadeType.PERSIST, CascadeType.MERGE,
		 CascadeType.DETACH, CascadeType.REFRESH})
@JoinTable(
		name="course_student",
		joinColumns=@JoinColumn(name="student_id"),
		inverseJoinColumns=@JoinColumn(name="course_id")
		)	
private List<Course> Courses;
	
public Student(){
	
}

public Student(String firstName, String lastName, String email) {
	super();
	this.firstName = firstName;
	this.lastName = lastName;
	this.email = email;
}

public int getId() {
	return id;
}

public void setId(int id) {
	this.id = id;
}

public String getFirstName() {
	return firstName;
}

public void setFirstName(String firstName) {
	this.firstName = firstName;
}

public String getLastName() {
	return lastName;
}

public void setLastName(String lastName) {
	this.lastName = lastName;
}

public String getEmail() {
	return email;
}

public void setEmail(String email) {
	this.email = email;
}



public List<Course> getCourses() {
	return Courses;
}

public void setCourses(List<Course> courses) {
	Courses = courses;
}

@Override
public String toString() {
	return "Student [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", email=" + email + "]";
}
	

}


package com.luv2code.hibernate.demo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="review")
public class Review {


@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="id")
private int id;

@Column(name="comment")
private String Comment;


public Review() {
	
}


public Review(String comment) {
	Comment = comment;
}


public int getId() {
	return id;
}


public void setId(int id) {
	this.id = id;
}


public String getComment() {
	return Comment;
}


public void setComment(String comment) {
	Comment = comment;
}


@Override
public String toString() {
	return "Review [id=" + id + ", Comment=" + Comment + "]";
}


}




package com.luv2code.hibernate.demo;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name="instructor_detail")
public class InstructorDetails {

	
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="id")
private int id;

@Column(name="youtube_channel")
private String youtubechannel;

@Column(name="hobby")
private String hobby;

@OneToOne(mappedBy="instructorDetail",cascade= {CascadeType.MERGE,CascadeType.DETACH,CascadeType.PERSIST,CascadeType.REFRESH})
private Instructor instructor;

public InstructorDetails() {
	
}


public InstructorDetails(String youtubechannel, String hobby) {
	super();
	this.youtubechannel = youtubechannel;
	this.hobby = hobby;
}



public Instructor getInstructor() {
	return instructor;
}


public void setInstructor(Instructor instructor) {
	this.instructor = instructor;
}


public int getId() {
	return id;
}

public void setId(int id) {
	this.id = id;
}

public String getYoutubechannel() {
	return youtubechannel;
}

public void setYoutubechannel(String youtubechannel) {
	this.youtubechannel = youtubechannel;
}

public String getHobby() {
	return hobby;
}

public void setHobby(String hobby) {
	this.hobby = hobby;
}

@Override
public String toString() {
	return "InstructorDetails [id=" + id + ", youtubechannel=" + youtubechannel + ", hobby=" + hobby + "]";
}



		
}



package com.luv2code.hibernate.demo;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

@Entity
@Table(name="instructor")
public class Instructor {
	
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="id")	
private int id;	

@Column(name="first_name")
private String firstName;

@Column(name="last_name")
private String lastName;

@Column(name="email")
private String email;

@OneToOne(cascade=CascadeType.ALL)
@JoinColumn(name="instructor_detail_id")
private InstructorDetails instructorDetail; 

@OneToMany(fetch=FetchType.LAZY,mappedBy= "instructor", cascade= {CascadeType.DETACH,CascadeType.MERGE,CascadeType.PERSIST,CascadeType.REFRESH})
private List<Course> Courses;



public Instructor() {
	
}
	
public Instructor(String firstName, String lastName, String email) {
	this.firstName = firstName;
	this.lastName = lastName;
	this.email = email;
}


public int getId() {
	return id;
}


public void setId(int id) {
	this.id = id;
}


public String getFirstName() {
	return firstName;
}


public void setFirstName(String firstName) {
	this.firstName = firstName;
}


public String getLastName() {
	return lastName;
}


public void setLastName(String lastName) {
	this.lastName = lastName;
}


public String getEmail() {
	return email;
}


public void setEmail(String email) {
	this.email = email;
}




public InstructorDetails getInstructorDetail() {
	return instructorDetail;
}

public void setInstructorDetail(InstructorDetails instructorDetail) {
	this.instructorDetail = instructorDetail;
}

@Override
public String toString() {
	return "Instructor [id=" + id + ", firstName=" + firstName + ", lastName=" + lastName + ", email=" + email
			+ ", instructorDetail=" + instructorDetail + "]";
}

public List<Course> getCourses() {
	return Courses;
}

public void setCourses(List<Course> courses) {
	Courses = courses;
}

// add convienence method for bi-directional mapping

public void add(Course tempCourse) {
	
	if (Courses==null) {
		Courses=new ArrayList<>();
		
	}
	Courses.add(tempCourse);
	tempCourse.setInstructor(this);
	
}

}



package com.luv2code.hibernate.demo;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name="course")
public class Course {

@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(name="id")
private int id;

@Column(name="title")
private String title;

@ManyToOne(cascade= {CascadeType.DETACH,CascadeType.MERGE,CascadeType.PERSIST,CascadeType.REFRESH})
@JoinColumn(name="instructor_id")
private Instructor instructor;


@OneToMany(fetch=FetchType.LAZY,cascade=CascadeType.ALL)
@JoinColumn(name="course_id")
private List<Review> reviews;



@ManyToMany(fetch=FetchType.LAZY,
		cascade= {CascadeType.PERSIST, CascadeType.MERGE,
		 CascadeType.DETACH, CascadeType.REFRESH})
@JoinTable(
		name="course_student",
		joinColumns=@JoinColumn(name="course_id"),
		inverseJoinColumns=@JoinColumn(name="student_id")
		)
private List<Student> students;


public Course() {
	
}


public Course(String title) {
	this.title = title;
}


public int getId() {
	return id;
}


public void setId(int id) {
	this.id = id;
}


public String getTitle() {
	return title;
}


public void setTitle(String title) {
	this.title = title;
}


public Instructor getInstructor() {
	return instructor;
}


public void setInstructor(Instructor instructor) {
	this.instructor = instructor;
}


public List<Review> getReviews() {
	return reviews;
}


public void setReviews(List<Review> reviews) {
	this.reviews = reviews;
}


// add a convience method

public void addReview(Review thereview) {
	
if(reviews==null) {
	reviews= new ArrayList<>();
}
	
	reviews.add(thereview);
	
}



public List<Student> getStudents() {
	return students;
}


public void setStudents(List<Student> students) {
	this.students = students;
}

// add convience method for the many to many mapping for student 



public void addStudent(Student theStudent ) {
	if(students==null) {
		students= new ArrayList<>();
				
	}
	students.add(theStudent);
}

@Override
public String toString() {
	return "Course [id=" + id + ", title=" + title + ", instructor=" + instructor + "]";
}


}



package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class getcoursesforaashwin2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .addAnnotatedClass(Student.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	
		// get the student mary from database
					int studentId = 2;
					Student tempStudent = session.get(Student.class, studentId);
					
					System.out.println("\nLoaded student: " + tempStudent);
					System.out.println("Courses: " + tempStudent.getCourses());
					
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}



package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class addcoursesforaashwin {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .addAnnotatedClass(Student.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	
		// get the student mary from database
					int studentId = 2;
					Student tempStudent = session.get(Student.class, studentId);
					
					System.out.println("\nLoaded student: " + tempStudent);
					System.out.println("Courses: " + tempStudent.getCourses());
					
					// create more courses 
					Course tempCourse1 = new Course("Rubik's Cube - How to Speed Cube");
					Course tempCourse2 = new Course("Atari 2600 - Game Development");
								
					// add student to courses
					tempCourse1.addStudent(tempStudent);
					tempCourse2.addStudent(tempStudent);
								
					// save the courses
					System.out.println("\nSaving the courses ...");
					
					session.save(tempCourse1);
					session.save(tempCourse2);
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}


package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class CreateCoursesandGetreviewsDemo3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	
	
     int theId=10;
     
     Course tempCourse= session.get(Course.class, theId);
     
     System.out.println(tempCourse);
     System.out.println(tempCourse.getReviews());
     
    
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}


package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class CreateCoursesandstudentDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .addAnnotatedClass(Student.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	
	// create a course
     
     Course tempCourse= new Course("how to drible like lionel messi");
    
     //save the course
     System.out.println("/saving the course");
     session.save(tempCourse);
     System.out.println("saved the course:"+tempCourse);

     // add the student
     
     Student tempStudent1= new Student("aswin","khatiwada","aswin.khatiwada@gmail.com");
     Student tempStudent2= new Student("aaaswin","kkkhatiwada","aaaswin.kkkhatiwada@gmail.com");
     
     // add student to the course
     tempCourse.addStudent(tempStudent1);
     tempCourse.addStudent(tempStudent2);
     
     
     // save the student
     System.out.println("saving the student");
     session.save(tempStudent1);
     session.save(tempStudent2);
     System.out.println("saved the student:"+tempCourse.getStudents());
     
     
     
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}


 package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class deletecoursesforaswin {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .addAnnotatedClass(Student.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	
		// get the student from database
					int studentId = 2;
					Student tempStudent = session.get(Student.class, studentId);
					
					System.out.println("\nLoaded student: " + tempStudent);
					System.out.println("Courses: " + tempStudent.getCourses());		
				
					// delete student
					System.out.println("\nDeleting student: " + tempStudent);
					session.delete(tempStudent);
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}


package com.luv2code.com.hibernate.demo;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

import com.luv2code.hibernate.demo.Course;
import com.luv2code.hibernate.demo.Instructor;
import com.luv2code.hibernate.demo.InstructorDetails;
import com.luv2code.hibernate.demo.Review;
import com.luv2code.hibernate.demo.Student;

public class deletecoursesforaashwin3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		
//create sessionFactory
   SessionFactory factory= new Configuration()
                           .configure("hibernate.cfg.xml")
                           .addAnnotatedClass(Instructor.class)
                           .addAnnotatedClass(InstructorDetails.class)
                           .addAnnotatedClass(Course.class)
                           .addAnnotatedClass(Review.class)
                           .addAnnotatedClass(Student.class)
                           .buildSessionFactory();
		
		
// create session
		
	Session session = factory.getCurrentSession();
	
	try {
		
		// use the session object to save the java object

	
	// start a transaction
		session.beginTransaction();
	

		// get the pacman course from db
		int courseId = 10;
		Course tempCourse = session.get(Course.class, courseId);
		
		// delete the course
		System.out.println("Deleting course: " + tempCourse);
		
		session.delete(tempCourse);
    
		// commit transaction
		session.getTransaction().commit();
		
	System.out.println("finally done!!");
		
	}
	
	finally {
		// add clean up code
		
		session.close();
		factory.close();
	}
		
	}

}


